"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./data/roadmapsData.js":
/*!******************************!*\
  !*** ./data/roadmapsData.js ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TAB_ORDER: function() { return /* binding */ TAB_ORDER; },\n/* harmony export */   detailed: function() { return /* binding */ detailed; },\n/* harmony export */   local: function() { return /* binding */ local; }\n/* harmony export */ });\nconst local = {\n    cat_typing: \"/gifs/cat_typing.gif\",\n    cat_sleep: \"/gifs/cat_sleep.gif\",\n    cat_gamer: \"/gifs/cat_gamer.gif\",\n    cat_course: \"/gifs/cat_coding_course.gif\",\n    cat_mouth_open: \"/gifs/cat_mouth_open.gif\",\n    cat_paw: \"/gifs/cat_paw.gif\",\n    cat_api: \"/gifs/cat_api.gif\",\n    sys_design: \"/gifs/sys_design.gif\",\n    light_dsa: \"/gifs/light_dsa.gif\",\n    deployment: \"/gifs/deployment.gif\",\n    tech_sql: \"/gifs/tech_sql.gif\",\n    server_flow: \"/gifs/server_flow.gif\",\n    jenkins: \"/gifs/jenkins.gif\",\n    docker: \"/gifs/docker.gif\",\n    git: \"/gifs/git.gif\",\n    placeholder: \"/gifs/placeholder.png\",\n    sound: \"/sounds/intro_chiptune.wav\"\n};\nconst TAB_ORDER = [\n    \"vscode\",\n    \"genai\",\n    \"python\",\n    \"sql\",\n    \"system\",\n    \"apis\",\n    \"dsa\",\n    \"deployment\"\n];\nconst detailed = {\n    vscode: {\n        id: \"vscode\",\n        title: \"VSCode\",\n        overview: \"Polish your editor: fast shortcuts, extensions, debugger, and workspace settings.\",\n        skills: [\n            \"VSCode basics\",\n            \"Debugging workflows\",\n            \"Using terminal and extensions\"\n        ],\n        tools: [\n            \"VSCode\",\n            \"Pylance\",\n            \"Postman\",\n            \"Prettier / Black\",\n            \"Jupyter extensions\",\n            \"Docker extension\"\n        ],\n        projects: [\n            \"Setup workspace with tasks\"\n        ],\n        weeks: [\n            {\n                title: \"Install & open project\",\n                tasks: [\n                    \"Install VSCode, Refer to the youtube tutorials I attached\"\n                ]\n            },\n            {\n                title: \"Extensions\",\n                tasks: [\n                    \"Refer to the yt vid. Basic extensions are Python, Pylance, GitLens, Docker, Prettier. To get custom themes in code to feel like a hacker search for themes in the extensions tab\"\n                ]\n            },\n            , \n        ],\n        resources: [\n            \"https://code.visualstudio.com/docs/python/python-tutorial\",\n            \"https://www.youtube.com/watch?v=ORrELERGIHs\",\n            \"https://www.youtube.com/watch?v=YjhkcvS1xKU\"\n        ],\n        gifs: [\n            local.cat_gamer\n        ]\n    },\n    genai: {\n        id: \"genai\",\n        title: \"GenAI\",\n        overview: \"Learn how to actually talk to AI so it listens. This one's all about getting comfy with prompts, understanding how LLMs think, and learning what RAG is without getting lost in buzzwords. You'll figure out how to build a small AI helper that can fetch info, answer questions, and not hallucinate too hard.\",\n        skills: [\n            \"Prompt writing (structure, tone, examples)\",\n            \"Understanding how LLMs process text\",\n            \"RAG basics (Retrieval Augmented Generation)\",\n            \"Calling APIs safely and handling responses\",\n            \"Intro to building small chat assistants\"\n        ],\n        tools: [\n            \"OpenAI Playground or API\",\n            \"LangChain for chaining prompts\",\n            \"tiktoken for token counting\",\n            \"PGVector or Chroma for storing embeddings\",\n            \"Streamlit for building your mini app\"\n        ],\n        projects: [\n            \"Build a mini chatbot that answers questions from a text file or CSV.\",\n            \"Experiment with prompts to see how small word changes affect results.\",\n            \"Create a RAG demo: upload text, embed it, then ask questions based on it.\",\n            \"Add a Streamlit UI so you can actually show it off.\"\n        ],\n        weeks: [\n            {\n                title: \"Week 1 — Talk to the bot properly\",\n                tasks: [\n                    \"Open OpenAI Playground and try short prompts. Notice how tone and phrasing change answers.\",\n                    \"Learn about temperature and tokens. High temperature = more creativity, low = more accuracy.\",\n                    \"Try few-shot prompting: give examples before asking your question.\"\n                ]\n            },\n            {\n                title: \"Week 2 — What even is RAG?\",\n                tasks: [\n                    \"RAG stands for Retrieval Augmented Generation. It just means: let your AI look up facts before answering.\",\n                    'Learn what embeddings are: turning text into math vectors so the AI can \"search\" through it.',\n                    \"Use PGVector or Chroma to store and retrieve chunks of your data before sending it to the model.\"\n                ]\n            },\n            {\n                title: \"Week 3 — Use it with code\",\n                tasks: [\n                    \"Connect to the OpenAI API in Python and send a few test prompts.\",\n                    \"Use LangChain to chain prompts together or to plug in your RAG retriever.\",\n                    \"Add basic error handling so your app doesn’t break mid-convo.\"\n                ]\n            },\n            {\n                title: \"Week 4 — Make it pretty and show it off\",\n                tasks: [\n                    \"Build a small Streamlit app where you can upload text or CSV files and ask questions.\",\n                    \"Add your name, colors, maybe a gif so it feels like your vibe.\",\n                    \"Test it with your friends and tweak prompts till it sounds smart but not robotic.\"\n                ]\n            }\n        ],\n        resources: [\n            \"https://www.youtube.com/watch?v=aOm75o2Z5-o\",\n            \"https://www.youtube.com/watch?v=PLxpvtODiqs\",\n            \"https://www.youtube.com/watch?v=tcqEUSNCn8I\",\n            \"https://platform.openai.com/docs/\",\n            \"https://learn.deeplearning.ai/chatgpt-prompt-eng/\",\n            \"https://python.langchain.com/docs/get_started/\",\n            \"https://www.trychroma.com/\"\n        ],\n        gifs: [\n            local.cat_course\n        ]\n    },\n    python: {\n        id: \"python\",\n        title: \"Python\",\n        overview: \"This is where you go from writing random print statements to actually building stuff that works. You'll learn how to clean data, automate boring things, and even spin up a small API with Flask or FastAPI. The goal isn’t to become a Python monk, it's to make Python do what you want without crying.\",\n        skills: [\n            \"Python basics (loops, functions, imports, error handling)\",\n            \"Working with data using pandas and numpy\",\n            \"Writing small automation scripts\",\n            \"Building simple APIs with Flask or FastAPI\",\n            \"Testing your code with pytest\",\n            \"Deploying with Streamlit or Vercel\"\n        ],\n        tools: [\n            \"Python 3.10+\",\n            \"VSCode (with Python extension)\",\n            \"pandas, numpy, requests\",\n            \"Flask or FastAPI\"\n        ],\n        projects: [\n            \"Write a small Python script that cleans a messy CSV and exports the result.\",\n            \"Automate a daily task, like sending yourself a summary of expenses or weather.\",\n            \"Build a mini Flask or FastAPI app that returns data when you hit an endpoint.\",\n            \"Make a Streamlit dashboard to visualize data interactively.\"\n        ],\n        weeks: [\n            {\n                title: \"Week 1 — Basics that actually matter\",\n                tasks: [\n                    \"Learn how to set up a virtual environment (venv or poetry).\",\n                    \"Understand variables, loops, lists, and functions by building tiny scripts.\",\n                    \"Play around in VSCode and learn how to run .py files and debug.\"\n                ]\n            },\n            {\n                title: \"Week 2 — Data wrangling and quick wins\",\n                tasks: [\n                    \"Learn pandas basics: reading CSVs, filtering rows, grouping, merging.\",\n                    \"Do small projects like cleaning up a dataset and exporting it.\",\n                    \"Get comfortable writing scripts that read, process, and save files.\"\n                ]\n            },\n            {\n                title: \"Week 3 — APIs and automation\",\n                tasks: [\n                    \"Use requests to call a public API (weather, cat facts, anything fun).\",\n                    \"Create a small Flask or FastAPI app with one or two endpoints that return JSON.\",\n                    \"Add simple error handling and print logs so you know what’s going on.\"\n                ]\n            },\n            {\n                title: \"Week 4 — Testing, packaging, and showing off\",\n                tasks: [\n                    \"Write your first test with pytest (even if it’s just one assert).\",\n                    \"Learn how to structure your project with folders and requirements.txt or poetry.\",\n                    \"Deploy a Streamlit app or push your Flask/FastAPI code to Vercel or Render.\"\n                ]\n            }\n        ],\n        resources: [\n            \"https://docs.python.org/3/tutorial/\",\n            \"https://pandas.pydata.org/docs/\",\n            \"https://fastapi.tiangolo.com/\",\n            \"https://flask.palletsprojects.com/\",\n            \"https://streamlit.io/\"\n        ],\n        gifs: [\n            local.cat_paw\n        ]\n    },\n    sql: {\n        id: \"sql\",\n        title: \"SQL & ETL\",\n        overview: \"Extract, transform, and load data efficiently.\",\n        skills: [\n            \"Core SQL\",\n            \"Window functions\",\n            \"ETL patterns\"\n        ],\n        tools: [\n            \"Postgres\",\n            \"SQLite\",\n            \"dbt\"\n        ],\n        projects: [\n            \"CSV → Postgres → dbt model → dashboard.\"\n        ],\n        weeks: [\n            {\n                title: \"Core SQL\",\n                tasks: [\n                    \"SELECT, GROUP BY, JOINs.\"\n                ]\n            },\n            {\n                title: \"Advanced SQL\",\n                tasks: [\n                    \"Window functions, indexing, explain plans.\"\n                ]\n            },\n            {\n                title: \"Pipelines\",\n                tasks: [\n                    \"Integrate SQLAlchemy + dbt.\"\n                ]\n            }\n        ],\n        gifs: [\n            local.cat_mouth_open\n        ]\n    },\n    system: {\n        id: \"system\",\n        title: \"System Design\",\n        overview: \"Scale data systems: caching, messaging, observability.\",\n        skills: [\n            \"Scaling patterns\",\n            \"Caching\",\n            \"Monitoring\"\n        ],\n        tools: [\n            \"Redis\",\n            \"SQS\",\n            \"Prometheus\",\n            \"Grafana\"\n        ],\n        projects: [\n            \"Design doc + prototype for 100k users.\"\n        ],\n        weeks: [\n            {\n                title: \"Basics\",\n                tasks: [\n                    \"Latency vs throughput, scaling, caching.\"\n                ]\n            },\n            {\n                title: \"Storage\",\n                tasks: [\n                    \"Partitioning, replication, availability.\"\n                ]\n            },\n            {\n                title: \"Workers\",\n                tasks: [\n                    \"Queues and job systems.\"\n                ]\n            }\n        ],\n        gifs: [\n            local.sys_design\n        ]\n    },\n    apis: {\n        id: \"apis\",\n        title: \"APIs\",\n        overview: \"Design robust, versioned, testable APIs.\",\n        skills: [\n            \"REST design\",\n            \"Versioning\",\n            \"Auth & rate-limits\",\n            \"Monitoring\"\n        ],\n        tools: [\n            \"OpenAPI\",\n            \"Postman\",\n            \"Nginx\"\n        ],\n        projects: [\n            \"Design + implement dataset API with docs & tests.\"\n        ],\n        weeks: [\n            {\n                title: \"Principles\",\n                tasks: [\n                    \"REST, pagination, idempotency.\"\n                ]\n            },\n            {\n                title: \"Contracts\",\n                tasks: [\n                    \"Swagger docs, mock servers, testing.\"\n                ]\n            },\n            {\n                title: \"Security\",\n                tasks: [\n                    \"JWT, OAuth, versioning.\"\n                ]\n            }\n        ],\n        gifs: [\n            local.cat_api\n        ]\n    },\n    dsa: {\n        id: \"dsa\",\n        title: \"Light DSA\",\n        overview: \"Develop algorithmic patterns over time.\",\n        skills: [\n            \"Two-pointers\",\n            \"Hashmaps\",\n            \"Sorting\",\n            \"Sliding window\"\n        ],\n        tools: [\n            \"LeetCode\",\n            \"NeetCode\"\n        ],\n        projects: [\n            \"Repo of solved problems.\"\n        ],\n        weeks: [\n            {\n                title: \"Ongoing\",\n                tasks: [\n                    \"3 problems/week, document patterns.\"\n                ]\n            }\n        ],\n        gifs: [\n            local.light_dsa\n        ]\n    },\n    deployment: {\n        id: \"deployment\",\n        title: \"Deployment\",\n        overview: \"Docker, Jenkins, and environment management.\",\n        skills: [\n            \"Docker\",\n            \"CI/CD\",\n            \"Version control\"\n        ],\n        tools: [\n            \"Docker\",\n            \"Jenkins\",\n            \"GitHub Actions\"\n        ],\n        projects: [\n            \"Dockerize app + CI/CD to staging.\"\n        ],\n        weeks: [\n            {\n                title: \"Docker basics\",\n                tasks: [\n                    \"Dockerfile, build image, run locally.\"\n                ]\n            },\n            {\n                title: \"Pipelines\",\n                tasks: [\n                    \"Create Jenkinsfile or Actions workflow.\"\n                ]\n            },\n            {\n                title: \"Envs & Git\",\n                tasks: [\n                    \"dev/UAT/prod, versioning, branching.\"\n                ]\n            }\n        ],\n        gifs: [\n            local.deployment\n        ]\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./data/roadmapsData.js\n"));

/***/ })

});