"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./data/roadmapsData.js":
/*!******************************!*\
  !*** ./data/roadmapsData.js ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TAB_ORDER: function() { return /* binding */ TAB_ORDER; },\n/* harmony export */   detailed: function() { return /* binding */ detailed; },\n/* harmony export */   local: function() { return /* binding */ local; }\n/* harmony export */ });\nconst local = {\n    cat_typing: \"/gifs/cat_typing.gif\",\n    cat_sleep: \"/gifs/cat_sleep.gif\",\n    cat_gamer: \"/gifs/cat_gamer.gif\",\n    cat_course: \"/gifs/cat_coding_course.gif\",\n    cat_mouth_open: \"/gifs/cat_mouth_open.gif\",\n    cat_paw: \"/gifs/cat_paw.gif\",\n    cat_api: \"/gifs/cat_api.gif\",\n    sys_design: \"/gifs/sys_design.gif\",\n    light_dsa: \"/gifs/light_dsa.gif\",\n    deployment: \"/gifs/deployment.gif\",\n    tech_sql: \"/gifs/tech_sql.gif\",\n    server_flow: \"/gifs/server_flow.gif\",\n    jenkins: \"/gifs/jenkins.gif\",\n    docker: \"/gifs/docker.gif\",\n    git: \"/gifs/git.gif\",\n    placeholder: \"/gifs/placeholder.png\",\n    sound: \"/sounds/intro_chiptune.wav\"\n};\nconst TAB_ORDER = [\n    \"vscode\",\n    \"genai\",\n    \"python\",\n    \"sql\",\n    \"system\",\n    \"apis\",\n    \"dsa\",\n    \"deployment\"\n];\nconst detailed = {\n    vscode: {\n        id: \"vscode\",\n        title: \"VSCode\",\n        overview: \"Polish your editor: fast shortcuts, extensions, debugger, and workspace settings.\",\n        skills: [\n            \"VSCode basics\",\n            \"Debugging workflows\",\n            \"Using terminal and extensions\"\n        ],\n        tools: [\n            \"VSCode\",\n            \"Pylance\",\n            \"Postman\",\n            \"Prettier / Black\",\n            \"Jupyter extensions\",\n            \"Docker extension\"\n        ],\n        projects: [\n            \"Setup workspace with tasks\"\n        ],\n        weeks: [\n            {\n                title: \"Install & open project\",\n                tasks: [\n                    \"Install VSCode, Refer to the youtube tutorials I attached\"\n                ]\n            },\n            {\n                title: \"Extensions\",\n                tasks: [\n                    \"Refer to the yt vid. Basic extensions are Python, Pylance, GitLens, Docker, Prettier. To get custom themes in code to feel like a hacker search for themes in the extensions tab\"\n                ]\n            },\n            , \n        ],\n        resources: [\n            \"https://code.visualstudio.com/docs/python/python-tutorial\",\n            \"https://www.youtube.com/watch?v=ORrELERGIHs\",\n            \"https://www.youtube.com/watch?v=YjhkcvS1xKU\"\n        ],\n        gifs: [\n            local.cat_gamer\n        ]\n    },\n    genai: {\n        id: \"genai\",\n        title: \"GenAI & Prompt Engineering\",\n        overview: \"Make LLMs actually useful for data work: design prompts, build retrieval-augmented systems (RAG), compose agentic chains, and reliably evaluate outputs. Focus on reproducible, cost-aware pipelines and safety/quality checks rather than one-off prompts.\",\n        // skills are short labels but read them as \"what to practice\"\n        skills: [\n            \"Prompt engineering (few-shot, instruction tuning, chain-of-thought)\",\n            \"RAG (embeddings + vector DBs + context selection)\",\n            \"Agentic workflows (chaining calls, tools & tool-use safety)\",\n            \"Evaluation & monitoring (automated evals, human-in-loop)\",\n            \"Cost & latency tradeoffs (batching, caching, temperature tuning)\"\n        ],\n        tools: [\n            \"OpenAI / Azure OpenAI / other LLM providers\",\n            \"LangChain (chains, retrievers, agents)\",\n            \"tiktoken (token counting & cost estimation)\",\n            \"Vector DBs: PGVector / Chroma / Pinecone / Weaviate\",\n            \"Embedding libs: OpenAI embeddings / sentence-transformers\",\n            \"httpx / requests (API client), Streamlit (demo UI)\",\n            \"Evaluation tooling: rouge/bleu/EM, or custom metrics + human eval\"\n        ],\n        // short, concrete projects that scale in difficulty\n        projects: [\n            \"CSV Q&A assistant (Streamlit): upload CSV → embed rows → ask questions (RAG).\",\n            \"Notebook: build a retrieval pipeline that uses PGVector + OpenAI embeddings and measures latency/cost per query.\",\n            \"Agentic helper: chain a table-explorer agent that can call SQL, generate plots, and return explanations.\",\n            \" production-ish demo: caching, rate-limit handling, simple audit log of prompts/responses for review.\"\n        ],\n        // week-by-week breakdown (4 weeks + ongoing)\n        weeks: [\n            {\n                title: \"Week 1 — Prompt fundamentals & tooling\",\n                tasks: [\n                    \"Learn prompt primitives: system vs user messages, few-shot examples, instructions and formatting.\",\n                    \"Experiment with temperature, top_p, max_tokens and observe behavior changes.\",\n                    \"Set up a small test harness: script that sends prompts to an LLM and logs inputs, outputs, token usage (tiktoken).\"\n                ]\n            },\n            {\n                title: \"Week 2 — Retrieval (RAG) basics\",\n                tasks: [\n                    \"Create embeddings for rows/text using OpenAI or sentence-transformers.\",\n                    \"Choose a vector DB (PGVector or Chroma), index embeddings and build a simple retriever.\",\n                    \"Implement context trimming (token budget) and measure latency + cost for a sample query.\"\n                ]\n            },\n            {\n                title: \"Week 3 — Chains, tools & simple agents\",\n                tasks: [\n                    \"Use LangChain to build a chain: Retriever → Summarizer → Answer formatter.\",\n                    \"Add a small tool (e.g., SQL query runner) and let the model call it via a defined tool interface.\",\n                    \"Design safe tool interfaces and validation for tool inputs/outputs.\"\n                ]\n            },\n            {\n                title: \"Week 4 — Evaluation, monitoring & production hardening\",\n                tasks: [\n                    \"Create automated tests for common prompts (expected patterns or canned checks).\",\n                    \"Set up logging & a minimal audit trail: store prompt, context, model response, cost, and user feedback.\",\n                    \"Add simple retry/caching logic and a cost monitor to avoid runaway usage.\"\n                ]\n            },\n            {\n                title: \"Ongoing — Responsible ops & improvements\",\n                tasks: [\n                    \"Collect real user queries, identify failure modes and refine prompts or retrieval.\",\n                    \"Implement a human-in-the-loop review flow for high-risk responses.\",\n                    \"Experiment with smaller models for cheap drafts + LLM for final refinement (model cascades).\"\n                ]\n            }\n        ],\n        resources: [\n            \"https://platform.openai.com/docs/ — provider basics & best practices\",\n            \"https://langchain.readthedocs.io/ — building chains, retrievers, and agents\",\n            \"https://www.sbert.net/ — sentence-transformers for embeddings\",\n            \"PGVector / Chroma / Pinecone docs — pick one and follow quickstart\"\n        ],\n        gifs: [\n            local.cat_course\n        ]\n    },\n    python: {\n        id: \"python\",\n        title: \"Python\",\n        overview: \"Reliable, production-aware Python projects with testing and CI.\",\n        skills: [\n            \"Idiomatic Python\",\n            \"pandas\",\n            \"pytest\",\n            \"packaging\"\n        ],\n        tools: [\n            \"Python 3.10+\",\n            \"pandas\",\n            \"pytest\",\n            \"Streamlit\",\n            \"poetry\"\n        ],\n        projects: [\n            \"ETL script + Streamlit dashboard.\"\n        ],\n        weeks: [\n            {\n                title: \"Env & fundamentals\",\n                tasks: [\n                    \"venv/poetry, functions, exceptions.\"\n                ]\n            },\n            {\n                title: \"Data wrangling\",\n                tasks: [\n                    \"pandas groupby, merge, vector ops.\"\n                ]\n            },\n            {\n                title: \"Tests & deploy\",\n                tasks: [\n                    \"pytest, GitHub Actions, deploy Streamlit.\"\n                ]\n            }\n        ],\n        gifs: [\n            local.cat_paw\n        ]\n    },\n    sql: {\n        id: \"sql\",\n        title: \"SQL & ETL\",\n        overview: \"Extract, transform, and load data efficiently.\",\n        skills: [\n            \"Core SQL\",\n            \"Window functions\",\n            \"ETL patterns\"\n        ],\n        tools: [\n            \"Postgres\",\n            \"SQLite\",\n            \"dbt\"\n        ],\n        projects: [\n            \"CSV → Postgres → dbt model → dashboard.\"\n        ],\n        weeks: [\n            {\n                title: \"Core SQL\",\n                tasks: [\n                    \"SELECT, GROUP BY, JOINs.\"\n                ]\n            },\n            {\n                title: \"Advanced SQL\",\n                tasks: [\n                    \"Window functions, indexing, explain plans.\"\n                ]\n            },\n            {\n                title: \"Pipelines\",\n                tasks: [\n                    \"Integrate SQLAlchemy + dbt.\"\n                ]\n            }\n        ],\n        gifs: [\n            local.cat_mouth_open\n        ]\n    },\n    system: {\n        id: \"system\",\n        title: \"System Design\",\n        overview: \"Scale data systems: caching, messaging, observability.\",\n        skills: [\n            \"Scaling patterns\",\n            \"Caching\",\n            \"Monitoring\"\n        ],\n        tools: [\n            \"Redis\",\n            \"SQS\",\n            \"Prometheus\",\n            \"Grafana\"\n        ],\n        projects: [\n            \"Design doc + prototype for 100k users.\"\n        ],\n        weeks: [\n            {\n                title: \"Basics\",\n                tasks: [\n                    \"Latency vs throughput, scaling, caching.\"\n                ]\n            },\n            {\n                title: \"Storage\",\n                tasks: [\n                    \"Partitioning, replication, availability.\"\n                ]\n            },\n            {\n                title: \"Workers\",\n                tasks: [\n                    \"Queues and job systems.\"\n                ]\n            }\n        ],\n        gifs: [\n            local.sys_design\n        ]\n    },\n    apis: {\n        id: \"apis\",\n        title: \"APIs\",\n        overview: \"Design robust, versioned, testable APIs.\",\n        skills: [\n            \"REST design\",\n            \"Versioning\",\n            \"Auth & rate-limits\",\n            \"Monitoring\"\n        ],\n        tools: [\n            \"OpenAPI\",\n            \"Postman\",\n            \"Nginx\"\n        ],\n        projects: [\n            \"Design + implement dataset API with docs & tests.\"\n        ],\n        weeks: [\n            {\n                title: \"Principles\",\n                tasks: [\n                    \"REST, pagination, idempotency.\"\n                ]\n            },\n            {\n                title: \"Contracts\",\n                tasks: [\n                    \"Swagger docs, mock servers, testing.\"\n                ]\n            },\n            {\n                title: \"Security\",\n                tasks: [\n                    \"JWT, OAuth, versioning.\"\n                ]\n            }\n        ],\n        gifs: [\n            local.cat_api\n        ]\n    },\n    dsa: {\n        id: \"dsa\",\n        title: \"Light DSA\",\n        overview: \"Develop algorithmic patterns over time.\",\n        skills: [\n            \"Two-pointers\",\n            \"Hashmaps\",\n            \"Sorting\",\n            \"Sliding window\"\n        ],\n        tools: [\n            \"LeetCode\",\n            \"NeetCode\"\n        ],\n        projects: [\n            \"Repo of solved problems.\"\n        ],\n        weeks: [\n            {\n                title: \"Ongoing\",\n                tasks: [\n                    \"3 problems/week, document patterns.\"\n                ]\n            }\n        ],\n        gifs: [\n            local.light_dsa\n        ]\n    },\n    deployment: {\n        id: \"deployment\",\n        title: \"Deployment\",\n        overview: \"Docker, Jenkins, and environment management.\",\n        skills: [\n            \"Docker\",\n            \"CI/CD\",\n            \"Version control\"\n        ],\n        tools: [\n            \"Docker\",\n            \"Jenkins\",\n            \"GitHub Actions\"\n        ],\n        projects: [\n            \"Dockerize app + CI/CD to staging.\"\n        ],\n        weeks: [\n            {\n                title: \"Docker basics\",\n                tasks: [\n                    \"Dockerfile, build image, run locally.\"\n                ]\n            },\n            {\n                title: \"Pipelines\",\n                tasks: [\n                    \"Create Jenkinsfile or Actions workflow.\"\n                ]\n            },\n            {\n                title: \"Envs & Git\",\n                tasks: [\n                    \"dev/UAT/prod, versioning, branching.\"\n                ]\n            }\n        ],\n        gifs: [\n            local.deployment\n        ]\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./data/roadmapsData.js\n"));

/***/ })

});